exports.handler = async (event, context) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
  if (event.httpMethod !== 'POST') {
    return { 
      statusCode: 405, 
      body: JSON.stringify({ error: 'Method Not Allowed' }) 
    };
  }

  try {
    // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
    const { name, telegramContact, phoneContact, message } = JSON.parse(event.body);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏
    const contact = telegramContact || phoneContact || '–Ω–µ —É–∫–∞–∑–∞–Ω';
    const contactType = telegramContact ? 'Telegram' : '–¢–µ–ª–µ—Ñ–æ–Ω';
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–±–µ–∑–æ–ø–∞—Å–Ω–µ–µ)
    const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '8378655892:AAHFlpTOjpIwNXbvYPvrXIoxD_5v3E0uyAc';
    const CHAT_ID = process.env.TELEGRAM_CHAT_ID || '360688303';
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const text = `üî• –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê

üë§ –ò–º—è: ${name}
üì± ${contactType}: ${contact}
üí¨ –ó–∞–¥–∞—á–∞: ${message || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}

‚è∞ ${new Date().toLocaleString('ru-RU', { 
  timeZone: 'Asia/Tashkent',
  year: 'numeric',
  month: '2-digit',
  day: '2-digit',
  hour: '2-digit',
  minute: '2-digit'
})}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const telegramResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json' 
      },
      body: JSON.stringify({ 
        chat_id: CHAT_ID, 
        text,
        parse_mode: 'HTML' // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      })
    });

    if (!telegramResponse.ok) {
      throw new Error(`Telegram API error: ${telegramResponse.status}`);
    }

    return { 
      statusCode: 200, 
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ 
        success: true, 
        message: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!' 
      }) 
    };

  } catch (error) {
    console.error('Telegram bot error:', error);
    
    return { 
      statusCode: 500,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ 
        error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è',
        details: error.message 
      }) 
    };
  }
};
